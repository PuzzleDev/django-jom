/**{# JomEntry class skeleton #}
 * {{ clazz }}  class file
 * Generated on {% now 'DATETIME_FORMAT' %}
 * 
 * Please do not edit this file as it will be overridden.
 */
{{ clazz }} = function(config) {
	
	/* Fields */
	this.fields = new Array();{% for field in fields %}
	this.fields['{{ field.name }}'] = {{ field.defaultValue }};{% endfor %}
	
	this.init = function(config) {
		for(var key in config) {
            this.fields[key] = config[key];
        }
	};
	this.init(config);
};

{% for field in fields %}
/* Get {{ field.name }} */
{{ clazz }}.prototype.get{{ field.name|capfirst }} = function() {
	return this.fields['{{ field.name }}'];
};

/* Set {{ field.name }} */
{{ clazz }}.prototype.set{{ field.name|capfirst }} = function(value) {
	this.fields['{{ field.name }}'] = value;
};
{% endfor %}


{% if include %}
	{% include include %}
{% endif %}


{{ clazz }}Factory = function() {
	this.joms = new Array();
}

{{ clazz }}Factory.prototype.get = function(instanceId) {
	return this.joms[instanceId];
}

{{ clazz }}Factory.prototype.getOrCreate = function(instanceId, fieldMap) {
	var jom =  this.joms[instanceId];
	if (jom == undefined) {
		jom = new {{ clazz }}({{% for key, jomField in fields.items %}
            '{{ key }}': {{ jomField.toJavascript }}{% if not forloop.last %},{% endif %}{% endfor %}});
        this.joms[jomId] = jom;
	}
	return jom;
}

{{ clazz }}Factory.prototype.asynchGet = function(instanceId, successCallback, errorCallback) {
	// TODO(msama): not implemented yet.
}

{{ clazz }}Factory.prototype.asynchCreate = function(successCallback, errorCallback) {
	// TODO(msama): not implemented yet.
}

var singleton{{ clazz }}Factory = new {{ clazz }}Factory();